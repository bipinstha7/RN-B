version: "3.8"

services:
  rn-nginx-proxy:
    image: nginx:stable-alpine
    container_name: rn-nginx-proxy
    ports:
      - "3000:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    # restart: 'unless-stopped'
    restart: "always"
    networks:
      - rn-backend
  rn-express-server:
    build:
      context: ./Express
      args:
        NODE_ENV: development
      target: rn-development-build-stage
      dockerfile: Dockerfile
    container_name: rn-express-server

    # Remove volumes in prod because it doesn't respect .dockerignore
    volumes:
      - ./:/app
      - /app/node_modules
    # restart: 'unless-stopped'
    restart: "always"
    networks:
      - rn-backend

  # rn-graphql-server:
  #   build:
  #     context: ./Graphql
  #     args:
  #       NODE_ENV: development
  #     target: rn-development-build-stage
  #     dockerfile: Dockerfile
  #   container_name: rn-graphql-server

  #   # Remove volumes in prod because it doesn't respect .dockerignore
  #   volumes:
  #     - ./:/app
  #     - /app/node_modules
  #   # restart: 'unless-stopped'
  #   restart: "always"
  #   networks:
  #     - rn-backend
networks:
  rn-backend:
    driver: bridge
# docker-compose down -v
# keep docker and nginx files in main backend folder and proxy pass to express and graphql. And it seems like the load balancing, microservice and multi container
